version: '3.8'

services:
  mosquitto:
    image: eclipse-mosquitto:2.0.15
    hostname: mosquitto
    restart: always
    user: 1883:1883
    environment:
      - PUID=1883
      - PGID=1883
    command: /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf -v
    ports:
      - 1883:1883
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - ./settings/mosquitto/:/mosquitto/:rw
    networks:
      - net
      - internal

  influxdb:
    image: influxdb:2.7.1
    hostname: influxdb
    restart: always
    build:
      context: ./settings/influxdb/
      dockerfile: Dockerfile
      args:
        - TZ=${TIMEZONE}
        - DATABASE=${INFLUXDB_DATABASE}
        - USERNAME=${INFLUXDB_USERNAME}
        - PASSWORD=${INFLUXDB_PASSWORD}
        - ORG=${INFLUXDB_ORG}
        - URL=${INFLUXDB_URL}
        - HTTP_AUTH_ENABLED=true
    healthcheck:
      test: test -f /shared/.initialized-influx || exit 1
      timeout: 1m
      retries: 10
    expose:
      - 8086
    volumes:
      - influxdb_data:/var/lib/influxdb
      - shared_data:/shared/:rw
    networks:
      - internal
    env_file:
      - .env

  grafana:
    image: grafana/grafana:9.5.5
    hostname: grafana
    restart: always
    build:
      context: ./settings/grafana/
      dockerfile: Dockerfile
    ports:
      - 3000
    volumes:
      - grafana_data:/var/lib/grafana:rw
      - shared_data:/shared:rw
    depends_on:
      influxdb:
        condition: service_healthy
      mosquitto:
        condition: service_started
    networks:
      - internal
    env_file:
      - .env

  telegraf:
    image: telegraf:1.27.1
    hostname: telegraf
    user: telegraf
    restart: always
    command: telegraf --config="/shared/telegraf/telegraf.conf" --watch-config="inotify"
    volumes:
      - shared_data:/shared/:rw
    expose:
      - 8094
      - 8080
    depends_on:
      influxdb:
        condition: service_healthy
      mosquitto:
        condition: service_started
    networks:
      - internal
    env_file:
      - .env

  nginx:
    image: nginx:1.25.1
    restart: always
    ports:
      - 80:80
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - ./settings/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - net
      - internal

networks:
  net:
    driver: bridge
  internal:

volumes:
  mosquitto_data:
    driver: local
  grafana_data:
    driver: local
  influxdb_data:
    driver: local
  shared_data:
